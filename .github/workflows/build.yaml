name: 随缘构建

on:
  workflow_dispatch:  # 允许手动触发

env:
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true

permissions:
  contents: write
  discussions: write
  packages: write
  id-token: write
  attestations: write

jobs:
  Build_Jar:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行

    environment:
      name: ESurfingDialer

    steps:
    - name: 下载本项目所有代码
      uses: actions/checkout@v4
      with:
        path: '${{ github.workspace }}'

    - name: 生成时间戳
      run: |
        echo "TIMESTAMP=$(date +'%Y.%m.%d.%H.%M.%S')" >> $GITHUB_ENV
        echo "TIMESTAMP2=$(date +'%Y年%m月%d日%H时%M分%S秒')" >> $GITHUB_ENV
        echo "TIMESTAMP=$(date +'%Y.%m.%d.%H.%M.%S')" > ${{ github.workspace }}/GITHUB_ENV.txt
        echo "TIMESTAMP2=$(date +'%Y年%m月%d日%H时%M分%S秒')" >> ${{ github.workspace }}/GITHUB_ENV.txt
        echo "TIMESTAMP3=$(date +'%Y年%m月%d日')" >> ${{ github.workspace }}/GITHUB_ENV.txt

    # - name: 生成 编译日期 相关更新日志
    #   run: echo -e "# 编译日期：${{ env.TIMESTAMP2 }} \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 查看 Docker action 工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 下载 ESurfingDialer 项目所有代码
      uses: actions/checkout@v4
      with:
        repository: 'Rsplwe/ESurfingDialer'
        path: '${{ github.workspace }}/ESurfingDialer'

    - name: 查看工作目录文件
      run: |
        ls -l ${{ github.workspace }}

    - name: 查看 ESurfingDialer 目录
      run: |
        ls -l ${{ github.workspace }}/ESurfingDialer

    - name: 下载 JDK 23 并设置环境变量
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'zulu'

    - name: 查看 Java 版本
      run: |
        java -version

    - name: 进入 ESurfingDialer/.../esurfing 目录并修改奇奇怪怪的内容
      run: |
        cd ${{ github.workspace }}/ESurfingDialer
        cd ./src/main/kotlin/com/rsplwe/esurfing/
        ls -l
        sudo apt install -y sed
        sed -i '/\HOST_NAME/c\    const val HOST_NAME = "Xiaomi 15 Pro"' Constants.kt
        sed -i '/\DEBUG/c\    const val DEBUG = true' Constants.kt
        echo ------line-------
        cat Constants.kt

    - name: 进入 ESurfingDialer 目录并执行构建
      run: |
        cd ${{ github.workspace }}/ESurfingDialer
        ./gradlew shadowJar

    - name: 查看 ESurfingDialer 构建产物
      run: |
        ls -l ${{ github.workspace }}/ESurfingDialer/build/libs

    - name: 上传 ESurfingDialer 的 JAR 构建产物
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialer 的通用 JAR 构建产物
        path: '${{ github.workspace }}/ESurfingDialer/build/libs/*'

    - name: 生成 ESurfingDialer 的通用 JAR 构建产物 证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/ESurfingDialer/build/libs/*'

    - name: 查找 ESurfingDialer 最新构建的 Jar 文件但不复制
      run: |
        chmod +x ${{ github.workspace }}/FindLasterBuildJar-without-copy.sh
        ${{ github.workspace }}/FindLasterBuildJar-without-copy.sh

    - name: 写入 LatestJarFilename 等相关环境变量到缓存文件
      run: |
        echo "LatestJarFilename=${{ env.LatestJarFilename }}" >> ${{ github.workspace }}/GITHUB_ENV.txt

    - name: 上传时间戳和相关环境变量缓存文件
      uses: actions/upload-artifact@v4
      with:
        name: TimeStampForGithubEnv
        path: ${{ github.workspace }}/GITHUB_ENV.txt

    # - name: 删除 时间戳和相关环境变量 缓存文件
    #   run: rm -rf ${{ github.workspace }}/GITHUB_ENV.txt

  Build_Amd64:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行

    needs:
      - Build_Jar

    environment:
      name: ESurfingDialer

    steps:
    - name: 下载本项目所有代码
      uses: actions/checkout@v4
      with:
        path: '${{ github.workspace }}'

    - name: 下载时间戳和相关环境变量缓存文件
      uses: actions/download-artifact@v4
      with:
        name: TimeStampForGithubEnv
        path: ${{ github.workspace }}/

    - name: 重新写入 时间戳 变量
      run: |
        TIMESTAMP=$(cat ${{ github.workspace }}/GITHUB_ENV.txt)
        echo "$TIMESTAMP" >> $GITHUB_ENV

    - name: 删除 时间戳和相关环境变量 缓存文件
      run: rm -rf ${{ github.workspace }}/GITHUB_ENV.txt

    - name: 创建 下载已编译的Jar文件 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/build/libs/

    - name: 下载 已编译的Jar 文件
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的通用 JAR 构建产物
        path: ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 生成 编译日期 相关更新日志
    #   run: echo -e "# 编译日期：${{ env.TIMESTAMP2 }} \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 查找最新构建的 Jar 文件并复制
      run: |
        chmod +x ${{ github.workspace }}/FindLasterBuildJar.sh
        ${{ github.workspace }}/FindLasterBuildJar.sh

    - name: 查看 Jar 文件复制结果
      run: |
        ls -l ${{ github.workspace }}/Phone

    # - name: 生成 最新Jar编译 相关更新日志
    #   run:  |
    #     echo -e "${{ env.LatestJarFilename }}  此文件为Rsplwe大佬的项目  https://github.com/Rsplwe/ESurfingDialer  的最新编译文件。\n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 为 ESurfingDialer 的 JAR 构建产物 生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/client.jar'

    - name: 下载 Oracle-Docker-images 项目代码
      uses: actions/checkout@v4
      with:
        repository: 'oracle/docker-images'
        path: '${{ github.workspace }}/Oracle-Docker-images'

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 查看 Oracle-Docker-images 目录
      run: |
        ls -l ${{ github.workspace }}/Oracle-Docker-images

    - name: 编译 OracleJava 镜像
      run: |
        chmod +x ${{ github.workspace }}/OracleJava.sh
        ${{ github.workspace }}/OracleJava.sh

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 编译 ESurfingDockerPhone 镜像
      run: |
        cd ${{ github.workspace }}/Phone
        chmod +x ./build.sh
        ./build.sh

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 登录到 GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 登录 DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 为 ESurfingDockerPhoneDocker 镜像打 GitHub Container Registry 版本号 标签
      run: docker tag esurfingdockerphone ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker 带版本号 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker 的 GitHub Container Registry 带版本号镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64 | cut -d '@' -f 2)
        echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker 的 GitHub Container Registry 带版本号镜像的证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64
        subject-digest: ${{ env.DIGEST }}
        push-to-registry: false

    - name: 为 ESurfingDockerPhoneDocker 打 DockerHub 版本号 标签
      run: docker tag esurfingdockerphone ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker 带版本号 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker 的 DockerHub 带版本号镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64 | cut -d '@' -f 2)
        echo "DIGEST2=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker 的 DockerHub 带版本号镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64
        subject-digest: ${{ env.DIGEST2 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPhoneDocker  镜像打 DockerHub latest-amd64 标签
      run: docker tag esurfingdockerphone ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker:latest-amd64 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker:latest-amd64 的 GitHub Container Registry 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-amd64 | cut -d '@' -f 2)
        echo "DIGEST3=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker:latest-amd64 的 GitHub Container Registry 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-amd64
        subject-digest: ${{ env.DIGEST3 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPhoneDocker 镜像打 DockerHub latest-amd64 标签
      run: docker tag esurfingdockerphone ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker:latest-amd64 的 DockerHub 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker:latest-amd64 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-amd64 | cut -d '@' -f 2)
        echo "DIGEST4=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker:latest-amd64 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-amd64
        subject-digest: ${{ env.DIGEST4 }}
        push-to-registry: false

    - name: 下载 ESurfingDockerPhoneDocker:latest-amd64 的 DockerHub 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-amd64 -o ${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz

    - name: 上传 ESurfingDockerPhoneDocker:latest-amd64 的 DockerHub 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPhone 的 Amd64 Docker 镜像（标签为：latest-amd64）
        path: '${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz'

    # - name: 生成 ESurfingDockerPhone 相关更新日志
    #   run: echo -e "ESurfingDockerPhone.tar.gz 此镜像占用手机设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/blob/main/%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.md) \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 生成 ESurfingDialerPhone 的 Amd64 Docker 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz'

    - name: 下载 Java 免安装版本
      run: |
        chmod +x ${{ github.workspace }}/Phone/Download_jdk.sh
        cd ${{ github.workspace }}/Phone/ 
        ./Download_jdk.sh

    - name: 查看 Java 免安装版本 下载结果 并 确保其在期待预期文件夹
      run: |
        ls -l ${{ github.workspace }}/Phone/Direct
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_linux-x64/
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_linux-x64/bin/
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_linux-x64/bin/java
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_windows-x64/
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_windows-x64/bin/
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_windows-x64/bin/java.exe

    - name: 修改 Phone 下的 Direct 文件夹为 ESurfingDialer
      run: |
        cd ${{ github.workspace }}/Phone/
        mv ./Direct ./ESurfingDialer

    - name: 查看修改后的 ESurfingDialer 文件夹
      run: |
        ls -l ${{ github.workspace }}/Phone/ESurfingDialer

    - name: 修改 ESurfingDialer 文件夹下所有文件的权限
      run: |
        chmod -R 777 ${{ github.workspace }}/Phone/ESurfingDialer/

    - name: 压缩 ESurfingDialer 文件夹为 zip 格式
      run: |
        cd ${{ github.workspace }}/Phone/
        zip -r ESurfingDialer.zip ESurfingDialer

    - name: 查看压缩后的 ESurfingDialer.zip 文件
      run: |
        ls -l ${{ github.workspace }}/Phone/ESurfingDialer.zip

    - name: 上传 ESurfingDialer 的免 Docker 直接运行版本
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialer 的 Amd64 免 Docker 直接运行版本
        path: '${{ github.workspace }}/Phone/ESurfingDialer.zip'

    # - name: 生成 免 Docker 直接运行版本 相关更新日志
    #   run: echo -e "ESurfingDialer.zip 此版本免Docker可运行。占用手机设备上网资格进行网络认证。 ~~[使用方法]~~（还没写） \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 为 ESurfingDialer 的免 Docker 直接运行版本生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/ESurfingDialer.zip'

    - name: 获取天翼校园网官方 Linux 版本下载地址并下载，不能获取则使用预下载文件
      run: |
        cd ${{ github.workspace }}/PC/
        pip3 install requests beautifulsoup4 lxml
        python3 ./Get_ESurfingDialerClient.py

    - name: 检查天翼校园网官方 Linux 版本下载结果
      run: |
        ls -l ${{ github.workspace }}/PC

    - name: 编译 ESurfingDockerPC 镜像
      run: |
        cd ${{ github.workspace }}/PC
        chmod +x ./build.sh
        ./build.sh

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 为 ESurfingDockerPc 镜像 打 GitHub Container Registry  版本号 标签
      run: docker tag esurfingdockerpc ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc 带版本号 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc 的 GitHub Container Registry 带版本号镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64 | cut -d '@' -f 2)
        echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc 的 GitHub Container Registry 带版本号镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64
        subject-digest: ${{ env.DIGEST }}
        push-to-registry: false

    - name: 为 ESurfingDockerPc 镜像打 GitHub Container Registry  版本号 标签
      run: docker tag esurfingdockerpc ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc 的带版本号 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc 的 DockerHub 带版本号的镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64 | cut -d '@' -f 2)
        echo "DIGEST2=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64
        subject-digest: ${{ env.DIGEST2 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPc 镜像打 GitHub Container Registry latest-amd64 标签
      run: docker tag esurfingdockerpc ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc:latest-amd64 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc:latest-amd64 的 GitHub Container Registry 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-amd64 | cut -d '@' -f 2)
        echo "DIGEST3=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc:latest-amd64 的 GitHub Container Registry 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-amd64
        subject-digest: ${{ env.DIGEST3 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPc 镜像打 DockerHub latest-amd64 标签
      run: docker tag esurfingdockerpc ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc:latest-amd64 的 DockerHub 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc:latest-amd64 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-amd64 | cut -d '@' -f 2)
        echo "DIGEST4=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc:latest-amd64 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-amd64
        subject-digest: ${{ env.DIGEST4 }}
        push-to-registry: false

    - name: 下载 ESurfingDockerPc:latest-amd64 的 DockerHub 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-amd64 -o ${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz

    - name: 上传 ESurfingDockerPc:latest-amd64 的 DockerHub 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPc 的 Amd64 Docker 镜像（标签为：latest-amd64）
        path: '${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz'

    # - name: 生成 ESurfingDockerPc 相关更新日志
    #   run: echo -e "ESurfingDockerPc.tar.gz 此镜像占用电脑设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/?tab=readme-ov-file#3%E4%BB%8Egithub-release%E4%B8%8B%E8%BD%BD%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5-1 \"使用方法\") \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 生成 ESurfingDockerPc:latest 的 DockerHub 证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz'

    # - name: 上传 Amd64平台的更新日志
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Amd64-ChangeLog
    #     path: '${{ github.workspace }}/CHANGELOG.txt'

  Prepare_For_Amd64_Release:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行

    needs:
      - Build_Amd64
      - Combine-Amd64-And-Arm64

    environment:
      name: ESurfingDialer

    steps:
    - name: 下载本项目所有代码
      uses: actions/checkout@v4
      with:
        path: '${{ github.workspace }}'

    # - name: 下载时间戳和相关环境变量缓存文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: TimeStampForGithubEnv
    #     path: ${{ github.workspace }}/

    # - name: 重新写入 时间戳 变量
    #   run: |
    #     TIMESTAMP=$(cat ${{ github.workspace }}/GITHUB_ENV.txt)
    #     echo "$TIMESTAMP" >> $GITHUB_ENV

    # - name: 删除 时间戳和相关环境变量 缓存文件
    #   run: rm -rf ${{ github.workspace }}/GITHUB_ENV.txt

    # - name: 创建 下载已编译的Jar文件 所需文件夹
    #   run: mkdir -p ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 下载 已编译的Jar 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialer 的通用 JAR 构建产物
    #     path: ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 下载 Amd64平台的更新日志
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: Amd64-ChangeLog
    #     path: ${{ github.workspace }}/

    # - name: 删除 Amd64平台的更新日志
    #   uses: geekyeggo/delete-artifact@v5
    #   with:
    #     name: Amd64-ChangeLog

    - name: 创建 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像 所需文件夹
      run: mkdir -p ${{ github.workspace }}/Phone/

    # - name: 下载 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialerPhone 的 Amd64 Docker 镜像（标签为：latest-amd64）
    #     path: ${{ github.workspace }}/Phone/

    - name: 拉取 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像
      run: |
         docker pull --platform linux/amd64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest

    - name: 下载 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest -o ${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz

    - name: 获取 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest | cut -d '@' -f 2)
        echo "DIGEST1=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest
        subject-digest: ${{ env.DIGEST1 }}
        push-to-registry: false

    - name: 上传 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPhone 的 Amd64 Docker 镜像（标签为：latest）
        path: '${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz'

    - name: 创建 ESurfingDockerPc:latest 的 DockerHub 镜像 所需文件夹
      run: mkdir -p ${{ github.workspace }}/PC/

    # - name: 下载 ESurfingDockerPc:latest 的 DockerHub 镜像 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialerPc 的 Amd64 Docker 镜像（标签为：latest-amd64）
    #     path: ${{ github.workspace }}/PC/

    - name: 拉取 ESurfingDockerPc:latest 的 DockerHub 镜像
      run: |
         docker pull --platform linux/amd64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest

    - name: 下载 ESurfingDockerPc:latest 的 DockerHub 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest -o ${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz

    - name: 获取 ESurfingDockerPc:latest 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest | cut -d '@' -f 2)
        echo "DIGEST1=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest
        subject-digest: ${{ env.DIGEST1 }}
        push-to-registry: false

    - name: 上传 ESurfingDockerPc:latest 的 DockerHub 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPc 的 Amd64 Docker 镜像（标签为：latest）
        path: '${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz'

    # - name: 创建 ESurfingDialer 的免 Docker 直接运行版本 所需文件夹
    #   run: mkdir -p ${{ github.workspace }}/Phone/

    # - name: 下载 ESurfingDialer 的免 Docker 直接运行版本 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialer 的 Amd64 免 Docker 直接运行版本
    #     path: ${{ github.workspace }}/Phone/

    # - name: 生成更新日志
    #   run: echo "### 好的更新已经到来（更新日志生成测试）" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 创建 Release
    #   id: Amd64-Release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     body_path: ${{ github.workspace }}/CHANGELOG.txt
    #     tag_name: V${{ env.TIMESTAMP }}-Amd64
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     files: |
    #       ${{ github.workspace }}/ESurfingDialer/build/libs/*
    #       ${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz
    #       ${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz
    #       ${{ github.workspace }}/Phone/ESurfingDialer.zip

    # - name: 写入 Amd64-Release-Url 等相关环境变量到缓存文件
    #   run: |
    #     echo -e "\"${{ steps.Amd64-Release.outputs.url }}\"" >> ${{ github.workspace }}/Amd64-Release-Url.txt
    #     echo "Amd64-Release-Url=${{ steps.Amd64-Release.outputs.url }}" >> $GITHUB_ENV

    # - name: 上传 Amd64-Release-Url 环境变量缓存文件
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Amd64-Release-UrlForGithubEnv
    #     path: ${{ github.workspace }}/Amd64-Release-Url.txt

    # - name: 删除 Amd64-Release-Url 环境变量 缓存文件
    #   run: rm -rf ${{ github.workspace }}/Amd64-Release-Url.txt

  Build_Arm64:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行

    needs:
      - Build_Jar

    environment:
      name: ESurfingDialer

    steps:
    - name: 初始化 QEMU
      uses: docker/setup-qemu-action@v3

    - name: 初始化 Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker
      
    - name: 下载本项目所有代码
      uses: actions/checkout@v4
      with:
        path: '${{ github.workspace }}'

    - name: 下载时间戳和相关环境变量缓存文件
      uses: actions/download-artifact@v4
      with:
        name: TimeStampForGithubEnv
        path: ${{ github.workspace }}/

    - name: 重新写入时间戳变量
      run: |
        TIMESTAMP=$(cat ${{ github.workspace }}/GITHUB_ENV.txt)
        echo "$TIMESTAMP" >> $GITHUB_ENV

    - name: 删除 时间戳和相关环境变量 缓存文件
      run: rm -rf ${{ github.workspace }}/GITHUB_ENV.txt

    - name: 创建 下载已编译的Jar文件 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/build/libs/

    - name: 下载已编译的Jar文件
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的通用 JAR 构建产物
        path: ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 生成 编译日期 相关更新日志
    #   run: echo -e "# 编译日期：${{ env.TIMESTAMP2 }} \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 查找最新构建的 Jar 文件并复制
      run: |
        chmod +x ${{ github.workspace }}/FindLasterBuildJar.sh
        ${{ github.workspace }}/FindLasterBuildJar.sh

    - name: 查看 Jar 文件复制结果
      run: |
        ls -l ${{ github.workspace }}/Phone

    # - name: 生成 最新Jar编译 相关更新日志
    #   run:  |
    #     echo -e "${{ env.LatestJarFilename }}  此文件为Rsplwe大佬的项目  https://github.com/Rsplwe/ESurfingDialer  的最新编译文件。\n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 为 ESurfingDialer 的 JAR 构建产物 生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/client.jar'

    - name: 下载 Oracle-Docker-images 项目代码
      uses: actions/checkout@v4
      with:
        repository: 'oracle/docker-images'
        path: '${{ github.workspace }}/Oracle-Docker-images'

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 查看 Oracle-Docker-images 目录
      run: |
        ls -l ${{ github.workspace }}/Oracle-Docker-images

    - name: 编译 OracleJava 镜像
      run: |
        chmod +x ${{ github.workspace }}/OracleJava-arm.sh
        ${{ github.workspace }}/OracleJava-arm.sh

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 编译 ESurfingDockerPhone 镜像
      run: |
        cd ${{ github.workspace }}/Phone
        chmod +x ./build-arm.sh
        ./build-arm.sh

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 登录到 GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 登录 DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 为 ESurfingDockerPhoneDocker 镜像打 GitHub Container Registry 版本号 标签
      run: docker tag esurfingdockerphone ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker 带版本号 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64 | cut -d '@' -f 2)
        echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64
        subject-digest: ${{ env.DIGEST }}
        push-to-registry: false

    - name: 为 ESurfingDockerPhoneDocker 镜像打 DockerHub 版本号 标签
      run: docker tag esurfingdockerphone ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker 带版本号 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64 | cut -d '@' -f 2)
        echo "DIGEST2=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64
        subject-digest: ${{ env.DIGEST2 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPhoneDocker 镜像打 GitHub Container Registry latest-arm64 标签
      run: docker tag esurfingdockerphone ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker:latest-arm64 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker:latest-arm64 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-arm64 | cut -d '@' -f 2)
        echo "DIGEST3=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker:latest-arm64 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-arm64
        subject-digest: ${{ env.DIGEST3 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPhoneDocker 镜像打 DockerHub latest-arm64 标签
      run: docker tag esurfingdockerphone ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPhoneDocker:latest-arm64 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPhoneDocker:latest-arm64 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-arm64 | cut -d '@' -f 2)
        echo "DIGEST4=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker:latest-arm64 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-arm64
        subject-digest: ${{ env.DIGEST4 }}
        push-to-registry: false

    - name: 下载 ESurfingDockerPhoneDocker:latest-arm64 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-arm64 -o ${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz

    - name: 上传 ESurfingDockerPhoneDocker:latest-arm64 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPhone 的 Arm64 Docker 镜像（标签为：latest-amd64）
        path: '${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz'

    # - name: 生成 ESurfingDockerPhone 相关更新日志
    #   run: echo -e "ESurfingDockerPhone.tar.gz 此镜像占用手机设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/?tab=readme-ov-file#3%E4%BB%8Egithub-release%E4%B8%8B%E8%BD%BD%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5 \"使用方法\") \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 生成 ESurfingDockerPhone:latest 的 DockerHub 证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz'

    - name: 下载 Java 免安装版本
      run: |
        chmod +x ${{ github.workspace }}/Phone/Download_jdk-arm.sh
        cd ${{ github.workspace }}/Phone/ 
        ./Download_jdk-arm.sh

    - name: 查看 Java 免安装版本 下载结果 并 确保其在期待预期文件夹
      run: |
        ls -l ${{ github.workspace }}/Phone/Direct
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_linux-x64/
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_linux-x64/bin/
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_linux-x64/bin/java

    - name: Java 对 Arm64 的 Windows 不兼容 ， 移除多余文件
      run: |
        rm -rf ${{ github.workspace }}/Phone/Direct/Start.bat

    - name: 查看 Java21 多余文件移除结果
      run: |
        ls -l ${{ github.workspace }}/Phone/Direct
        ls -l ${{ github.workspace }}/Phone/Direct/jdk_linux-x64/

    - name: 修改 Phone 下的 Direct 文件夹为 ESurfingDialer
      run: |
        cd ${{ github.workspace }}/Phone/
        mv ./Direct ./ESurfingDialer

    - name: 查看修改后的 ESurfingDialer 文件夹
      run: |
        ls -l ${{ github.workspace }}/Phone/ESurfingDialer

    - name: 修改 ESurfingDialer 文件夹下所有文件的权限
      run: |
        chmod -R 777 ${{ github.workspace }}/Phone/ESurfingDialer/

    - name: 压缩 ESurfingDialer 文件夹为 zip 格式
      run: |
        cd ${{ github.workspace }}/Phone/
        zip -r ESurfingDialer.zip ESurfingDialer

    - name: 查看压缩后的 ESurfingDialer.zip 文件
      run: |
        ls -l ${{ github.workspace }}/Phone/ESurfingDialer.zip

    - name: 上传 ESurfingDialer 的免 Docker 直接运行版本
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialer 的 Arm64 免 Docker 直接运行版本
        path: '${{ github.workspace }}/Phone/ESurfingDialer.zip'

    # - name: 生成 免 Docker 直接运行版本 相关更新日志
    #   run: echo -e "ESurfingDialer.zip 此版本免Docker可运行。占用手机设备上网资格进行网络认证。（Java 不兼容 Arm64 的Windows） ~~[使用方法]~~（还没写） \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 为 ESurfingDialer 的免 Docker 直接运行版本生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/ESurfingDialer.zip'

    - name: 获取天翼校园网官方 Linux 版本下载地址并下载，不能获取则使用预下载文件
      run: |
        cd ${{ github.workspace }}/PC/
        pip3 install requests beautifulsoup4 lxml
        python3 ./Get_ESurfingDialerClient.py

    - name: 检查天翼校园网官方 Linux 版本下载结果
      run: |
        ls -l ${{ github.workspace }}/PC

    - name: 编译 ESurfingDockerPC 镜像
      run: |
        cd ${{ github.workspace }}/PC
        chmod +x ./build-arm.sh
        ./build-arm.sh

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 为 ESurfingDockerPc 镜像打 GitHub Container Registry 版本号 标签
      run: docker tag esurfingdockerpc ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc 带版本号 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64 | cut -d '@' -f 2)
        echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64
        subject-digest: ${{ env.DIGEST }}
        push-to-registry: false

    - name: 为 ESurfingDockerPc 镜像打 DockerHub 版本号 标签
      run: docker tag esurfingdockerpc ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc 带版本号 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64 | cut -d '@' -f 2)
        echo "DIGEST2=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64
        subject-digest: ${{ env.DIGEST2 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPc 镜像打 GitHub Container Registry Latest 标签
      run: docker tag esurfingdockerpc ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc:latest 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc:latest 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-arm64 | cut -d '@' -f 2)
        echo "DIGEST3=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc:latest 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-arm64
        subject-digest: ${{ env.DIGEST3 }}
        push-to-registry: false

    - name: 为 ESurfingDockerPc 镜像打 DockerHub Latest 标签
      run: docker tag esurfingdockerpc ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 推送 ESurfingDockerPc:latest 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 获取 ESurfingDockerPc:latest 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-arm64 | cut -d '@' -f 2)
        echo "DIGEST4=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-arm64
        subject-digest: ${{ env.DIGEST4 }}
        push-to-registry: false

    - name: 下载 ESurfingDockerPc:latest 的 DockerHub 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-arm64 -o ${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz

    - name: 上传 ESurfingDockerPc:latest 的 DockerHub 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest-arm64）
        path: '${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz'

    # - name: 生成 ESurfingDockerPc 相关更新日志
    #   run: echo -e "ESurfingDockerPc.tar.gz 此镜像占用电脑设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/?tab=readme-ov-file#3%E4%BB%8Egithub-release%E4%B8%8B%E8%BD%BD%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5-1 \"使用方法\") \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 生成 ESurfingDockerPc:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz'

    # - name: 上传 Arm64平台的更新日志
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Arm64-ChangeLog
    #     path: '${{ github.workspace }}/CHANGELOG.txt'

  Prepare_For_Arm64_Release:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行

    needs:
      - Build_Arm64
      - Combine-Amd64-And-Arm64

    environment:
      name: ESurfingDialer

    steps:
    # - name: 下载本项目所有代码
    #   uses: actions/checkout@v4
    #   with:
    #     path: '${{ github.workspace }}'

    # - name: 下载时间戳和相关环境变量缓存文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: TimeStampForGithubEnv
    #     path: ${{ github.workspace }}/

    # - name: 重新写入 时间戳 变量
    #   run: |
    #     TIMESTAMP=$(cat ${{ github.workspace }}/GITHUB_ENV.txt)
    #     echo "$TIMESTAMP" >> $GITHUB_ENV

    # - name: 删除 时间戳和相关环境变量 缓存文件
    #   run: rm -rf ${{ github.workspace }}/GITHUB_ENV.txt

    # - name: 创建 下载已编译的Jar文件 所需文件夹
    #   run: mkdir -p ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 下载 已编译的Jar 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialer 的通用 JAR 构建产物
    #     path: ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 下载 Arm64平台的更新日志
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: Arm64-ChangeLog
    #     path: ${{ github.workspace }}/

    # - name: 删除 Arm64平台的更新日志
    #   uses: geekyeggo/delete-artifact@v5
    #   with:
    #     name: Arm64-ChangeLog

    - name: 创建 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像 所需文件夹
      run: mkdir -p ${{ github.workspace }}/Phone/

    # - name: 下载 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialerPhone 的 Arm64 Docker 镜像
    #     path: ${{ github.workspace }}/Phone/

    - name: 拉取 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像
      run: |
         docker pull --platform linux/arm64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest

    - name: 下载 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest -o ${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz

    - name: 获取 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest | cut -d '@' -f 2)
        echo "DIGEST1=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest
        subject-digest: ${{ env.DIGEST1 }}
        push-to-registry: false

    - name: 上传 ESurfingDockerPhoneDocker:latest 的 DockerHub 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPhone 的 Arm64 Docker 镜像（标签为：latest）
        path: '${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz'

    - name: 创建 ESurfingDialer 的免 Docker 直接运行版本 所需文件夹
      run: mkdir -p ${{ github.workspace }}/Phone/

    - name: 下载 ESurfingDialer 的免 Docker 直接运行版本 文件
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的 Amd64 免 Docker 直接运行版本
        path: ${{ github.workspace }}/Phone/

    - name: 创建 ESurfingDockerPc:latest 的 DockerHub 镜像 所需文件夹
      run: mkdir -p ${{ github.workspace }}/PC/

    # - name: 下载 ESurfingDockerPc:latest 的 DockerHub 镜像 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest-arm64）
    #     path: ${{ github.workspace }}/PC/

    - name: 拉取 ESurfingDockerPc:latest 的 DockerHub 镜像
      run: |
         docker pull --platform linux/arm64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest

    - name: 下载 ESurfingDockerPc:latest 的 DockerHub 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest -o ${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz

    - name: 获取 ESurfingDockerPc:latest 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest | cut -d '@' -f 2)
        echo "DIGEST1=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ESurfingDockerPc:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest
        subject-digest: ${{ env.DIGEST1 }}
        push-to-registry: false

    - name: 上传 ESurfingDockerPc:latest 的 DockerHub 镜像
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest）
        path: '${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz'

    # - name: 创建 ESurfingDialer 的免 Docker 直接运行版本 所需文件夹
    #   run: mkdir -p ${{ github.workspace }}/Phone/

    # - name: 下载 ESurfingDialer 的免 Docker 直接运行版本 文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialer 的 Arm64 免 Docker 直接运行版本
    #     path: ${{ github.workspace }}/Phone/

    # - name: 生成更新日志
    #   run: echo "### 好的更新已经到来（更新日志生成测试）" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 创建 Release
    #   id: Arm64-Release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     body_path: ${{ github.workspace }}/CHANGELOG.txt
    #     tag_name: V${{ env.TIMESTAMP }}-Arm64
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     files: |
    #       ${{ github.workspace }}/ESurfingDialer/build/libs/*
    #       ${{ github.workspace }}/Phone/ESurfingDockerPhone.tar.gz
    #       ${{ github.workspace }}/PC/ESurfingDockerPc.tar.gz
    #       ${{ github.workspace }}/Phone/ESurfingDialer.zip

    # - name: 写入 Arm64-Release-Url 等相关环境变量到缓存文件
    #   run: |
    #     echo -e "\"${{ steps.Arm64-Release.outputs.url }}\"" >> ${{ github.workspace }}/Arm64-Release-Url.txt
    #     echo "Arm64-Release-Url=${{ steps.Arm64-Release.outputs.url }}" >> $GITHUB_ENV

    # - name: 上传 Arm64-Release-Url 环境变量缓存文件
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Arm64-Release-UrlForGithubEnv
    #     path: ${{ github.workspace }}/Arm64-Release-Url.txt

    # - name: 删除 Arm64-Release-Url 环境变量 缓存文件
    #   run: rm -rf ${{ github.workspace }}/Arm64-Release-Url.txt

  Combine-Amd64-And-Arm64:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行
    
    needs:
      - Build_Amd64
      - Build_Arm64

    environment:
      name: ESurfingDialer

    steps:
    # - name: 下载本项目所有代码
    #   uses: actions/checkout@v4
    #   with:
    #     path: '${{ github.workspace }}'

    - name: 下载时间戳和相关环境变量缓存文件
      uses: actions/download-artifact@v4
      with:
        name: TimeStampForGithubEnv
        path: ${{ github.workspace }}/

    - name: 重新写入时间戳变量
      run: |
        TIMESTAMP=$(cat ${{ github.workspace }}/GITHUB_ENV.txt)
        echo "$TIMESTAMP" >> $GITHUB_ENV

    - name: 删除 时间戳和相关环境变量 缓存文件
      run: rm -rf ${{ github.workspace }}/GITHUB_ENV.txt

    # - name: 创建 下载已编译的Jar文件 所需文件夹
    #   run: mkdir -p ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 下载已编译的Jar文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ESurfingDialer 的通用 JAR 构建产物
    #     path: ${{ github.workspace }}/ESurfingDialer/build/libs/

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 登录到 GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 登录 DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }} ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64 ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}

    - name: 推送 esurfingdockerphonedocker 带版本号 镜像到 GitHub Container Registry
      run: docker manifest  push ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-arm64 ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest

    - name: 推送 esurfingdockerphonedocker:latest 镜像到 GitHub Container Registry
      run: docker manifest  push ghcr.io/${{ github.repository_owner }}/esurfingdockerphonedocker:latest

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }} ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-arm64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}

    - name: 推送 esurfingdockerphonedocker 带版本号 镜像到 DockerHub
      run: docker manifest  push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:${{ env.TIMESTAMP }}

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerphonedocker 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-arm64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest

    - name: 推送 esurfingdockerphonedocker:latest 镜像到 DockerHub
      run: docker manifest  push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerphonedocker:latest

    - name: 下载 esurfingdockerpc 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerpc 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }} ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64 ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}

    - name: 推送 esurfingdockerpc 带版本号 镜像到 GitHub Container Registry
      run: docker manifest  push ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:${{ env.TIMESTAMP }}

    - name: 下载 esurfingdockerpc 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerpc 的 Amd64 Github 镜像
      run: docker pull ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-arm64 ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest

    - name: 推送 esurfingdockerpc:latest 镜像到 GitHub Container Registry
      run: docker manifest  push ghcr.io/${{ github.repository_owner }}/esurfingdockerpc:latest

    - name: 下载 esurfingdockerpc 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerpc 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }} ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-arm64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}

    - name: 推送 esurfingdockerpc 带版本号 镜像到 DockerHub
      run: docker manifest  push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:${{ env.TIMESTAMP }}

    - name: 下载 esurfingdockerpc 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-amd64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 下载 esurfingdockerpc 的 Amd64 Docker 镜像
      run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-arm64

    - name: 查看当前可用的Docker本地镜像
      run: |
        docker image ls

    - name: 对镜像进行合并
      run: |
        docker manifest create ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-arm64 ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest-amd64

    - name: 查看镜像的 manifest 列表结构
      run: |
        docker manifest inspect ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest

    - name: 推送 esurfingdockerpc:latest 镜像到 DockerHub
      run: docker manifest  push ${{ vars.DOCKERHUB_USERNAME }}/esurfingdockerpc:latest

    - name: 新建文件夹用于储存免Docker执行版本
      run:  |
        mkdir -p ${{ github.workspace }}/ESurfingDialer
        mkdir -p ${{ github.workspace }}/ESurfingDialer/Amd
        mkdir -p ${{ github.workspace }}/ESurfingDialer/Arm
  
    - name: 修改 ESurfingDialer 文件夹下所有文件的权限
      run: |
        chmod -R 777 ${{ github.workspace }}/ESurfingDialer/

    - name: 为 ESurfingDialer 免DOcker版本 的下载做准备
      run: |
        sudo apt install -y unzip

    - name: 下载 ESurfingDialer 的 Amd64 免 Docker 直接运行版本
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的 Amd64 免 Docker 直接运行版本
        path: ${{ github.workspace }}/ESurfingDialer/ESurfingDialer/Amd

    - name: 解压 ESurfingDialer 的 Amd64 免 Docker 直接运行版本
      run: |
        cd ${{ github.workspace }}/ESurfingDialer/ESurfingDialer/Amd
        unzip -ov ESurfingDialer.zip && rm ESurfingDialer.zip

    - name: 查看 ESurfingDialer 的 Amd64 免 Docker 直接运行版本 解压后的目录
      run: |
        cd ${{ github.workspace }}/ESurfingDialer/ESurfingDialer/Amd
        ls -l

    - name: 下载 ESurfingDialer 的 Arm64 免 Docker 直接运行版本
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的 Arm64 免 Docker 直接运行版本
        path: ${{ github.workspace }}/ESurfingDialer/ESurfingDialer/Arm

    - name: 解压 ESurfingDialer 的 Arm64 免 Docker 直接运行版本
      run: |
        cd ${{ github.workspace }}/ESurfingDialer/ESurfingDialer/Arm
        unzip -ov ESurfingDialer.zip && rm ESurfingDialer.zip

    - name: 查看 ESurfingDialer 的 Arm64 免 Docker 直接运行版本 解压后的目录
      run: |
        cd ${{ github.workspace }}/ESurfingDialer/ESurfingDialer/Arm
        ls -l

    - name: 修改 ESurfingDialer 文件夹下所有文件的权限
      run: |
        chmod -R 777 ${{ github.workspace }}/ESurfingDialer/ESurfingDialer/

    - name: 压缩 ESurfingDialer 文件夹为 zip 格式
      run: |
        cd ${{ github.workspace }}/ESurfingDialer/
        zip -r ESurfingDialer.zip ESurfingDialer

    - name: 查看压缩后的 ESurfingDialer.zip 文件
      run: |
        ls -l ${{ github.workspace }}/ESurfingDialer/ESurfingDialer.zip

    - name: 上传 ESurfingDialer 的免 Docker 直接运行版本
      uses: actions/upload-artifact@v4
      with:
        name: ESurfingDialer 的 通用 免 Docker 直接运行版本
        path: '${{ github.workspace }}/ESurfingDialer/ESurfingDialer.zip'

    - name: 为 ESurfingDialer 的免 Docker 直接运行版本 生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/ESurfingDialer/ESurfingDialer.zip'

    # - name: 生成 编译日期 相关更新日志
    #   run: echo -e "# 编译日期：${{ env.TIMESTAMP2 }} \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 生成 最新Jar编译 相关更新日志
    #   run:  |
    #     echo -e "${{ env.LatestJarFilename }}  此文件为Rsplwe大佬的项目  https://github.com/Rsplwe/ESurfingDialer  的最新编译文件。\n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 上传 Amd64平台和Arm64平台结合 的更新日志
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Combine-Amd64-And-Arm64-ChangeLog
    #     path: '${{ github.workspace }}/CHANGELOG.txt'

  Release-Combine-Amd64-And-Arm64:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行

    needs:
      - Combine-Amd64-And-Arm64
      - Prepare_For_Amd64_Release
      - Prepare_For_Arm64_Release

    environment:
      name: ESurfingDialer

    steps:
    - name: 下载本项目所有代码
      uses: actions/checkout@v4
      with:
        path: '${{ github.workspace }}'

    - name: 下载时间戳和相关环境变量缓存文件
      uses: actions/download-artifact@v4
      with:
        name: TimeStampForGithubEnv
        path: ${{ github.workspace }}/

    - name: 重新写入 时间戳 变量
      run: |
        TIMESTAMP=$(cat ${{ github.workspace }}/GITHUB_ENV.txt)
        echo "$TIMESTAMP" >> $GITHUB_ENV

    - name: 删除 时间戳和相关环境变量 缓存文件
      run: rm -rf ${{ github.workspace }}/GITHUB_ENV.txt

    - name: 创建 下载已编译的Jar文件 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/build/libs/

    - name: 下载 已编译的Jar 文件
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的通用 JAR 构建产物
        path: ${{ github.workspace }}/ESurfingDialer/build/libs/

    # - name: 下载 Amd64平台和Arm64平台结合 的更新日志
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: Combine-Amd64-And-Arm64-ChangeLog
    #     path: ${{ github.workspace }}/

    # - name: 删除 Amd64平台和Arm64平台结合 的更新日志
    #   uses: geekyeggo/delete-artifact@v5
    #   with:
    #     name: Combine-Amd64-And-Arm64-ChangeLog

    - name: 创建 ESurfingDialer 的免 Docker 直接运行版本 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/

    - name: 下载 ESurfingDialer 的免 Docker 直接运行版本 文件
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的 通用 免 Docker 直接运行版本
        path: ${{ github.workspace }}/ESurfingDialer/

    - name: 修改 ESurfingDialer 的 通用 免 Docker 直接运行版本 文件名
      run: |
        mv ${{ github.workspace }}/ESurfingDialer/ESurfingDialer.zip ${{ github.workspace }}/ESurfingDialer/ESurfingDialer-General.zip

    # - name: 下载 Amd64-Release-Url 等相关环境变量
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: Amd64-Release-UrlForGithubEnv
    #     path: ${{ github.workspace }}/

    # - name: 重新写入 Amd64-Release-Url 环境变量
    #   run: |
    #     Amd64_Release_Url=$(cat ${{ github.workspace }}/Amd64-Release-Url.txt)
    #     echo "Amd64_Release_Url=$Amd64_Release_Url" >> $GITHUB_ENV

    # - name: 删除 Amd64-Release-Url 环境变量 缓存文件
    #   run: rm -rf ${{ github.workspace }}/Amd64-Release-Url.txt

    # - name: 下载 Arm64-Release-Url 环境变量缓存文件
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: Arm64-Release-UrlForGithubEnv
    #     path: ${{ github.workspace }}/

    # - name: 重新写入 Arm64-Release-Url 环境变量
    #   run: |
    #     Arm64_Release_Url=$(cat ${{ github.workspace }}/Arm64-Release-Url.txt)
    #     echo "Arm64_Release_Url=$Arm64_Release_Url" >> $GITHUB_ENV

    # - name: 删除 Arm64-Release-Url 环境变量 缓存文件
    #   run: rm -rf ${{ github.workspace }}/Arm64-Release-Url.txt

    # - name: 生成更新日志
    #   run: echo "### 好的更新已经到来（更新日志生成测试）" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 创建 Release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     body_path: ${{ github.workspace }}/CHANGELOG.txt
    #     tag_name: V${{ env.TIMESTAMP }}-Complete
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     files: |
    #       ${{ github.workspace }}/ESurfingDialer/build/libs/*
    #       ${{ github.workspace }}/ESurfingDialer/ESurfingDialer.zip
    #     #  ${{ github.workspace }}/ESurfingDockerPhone.tar.gz
    #     #  ${{ github.workspace }}/ESurfingDockerPc.tar.gz

    - name: 创建 ESurfingDialerPc 的 Amd64 Docker 镜像（标签为：latest） 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/PC/

    - name: 下载 ESurfingDialerPc 的 Amd64 Docker 镜像（标签为：latest）
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialerPc 的 Amd64 Docker 镜像（标签为：latest）
        path: ${{ github.workspace }}/ESurfingDialer/PC/

    - name: 修改  ESurfingDialerPc 的 Amd64 Docker 镜像（标签为：latest） 文件名
      run: |
        mv ${{ github.workspace }}/ESurfingDialer/PC/ESurfingDockerPc.tar.gz ${{ github.workspace }}/ESurfingDialer/PC/ESurfingDockerPc-Amd64.tar.gz

    - name: 创建 ESurfingDialerPhone 的 Amd64 Docker 镜像（标签为：latest） 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/Phone/

    - name: 下载 ESurfingDialerPhone 的 Amd64 Docker 镜像（标签为：latest）
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialerPhone 的 Amd64 Docker 镜像（标签为：latest）
        path: ${{ github.workspace }}/ESurfingDialer/Phone/

    - name: 修改 ESurfingDialerPhone 的 Amd64 Docker 镜像（标签为：latest） 文件名
      run: |
        mv ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDockerPhone.tar.gz ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDockerPhone-Amd64.tar.gz

    - name: 创建 ESurfingDialer 的 Amd64 免 Docker 直接运行版本 所需文件夹
      run: mkdir -p $${{ github.workspace }}/ESurfingDialer/Phone/

    - name: 下载 ESurfingDialer 的 Amd64 免 Docker 直接运行版本 文件
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的 Amd64 免 Docker 直接运行版本
        path: ${{ github.workspace }}/ESurfingDialer/Phone/

    - name: 修改 ESurfingDialer 的 Amd64 免 Docker 直接运行版本 文件名
      run: |
        mv ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDialer.zip ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDialer-Amd64.zip

    - name: 创建 ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest） 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/PC/

    - name: 下载 ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest）
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest）
        path: ${{ github.workspace }}/ESurfingDialer/PC/

    - name: 修改 ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest） 文件名
      run: |
        mv ${{ github.workspace }}/ESurfingDialer/PC/ESurfingDockerPc.tar.gz ${{ github.workspace }}/ESurfingDialer/PC/ESurfingDockerPc-Arm64.tar.gz

    - name: 创建 ESurfingDialerPhone 的 Arm64 Docker 镜像（标签为：latest） 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/Phone/

    - name: 下载 ESurfingDialerPhone 的 Arm64 Docker 镜像（标签为：latest） 镜像
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialerPhone 的 Arm64 Docker 镜像（标签为：latest）
        path: ${{ github.workspace }}/ESurfingDialer/Phone/

    - name: 修改 ESurfingDialerPc 的 Arm64 Docker 镜像（标签为：latest） 文件名
      run: |
        mv ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDockerPhone.tar.gz ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDockerPhone-Arm64.tar.gz

    - name: 创建 ESurfingDialer 的 Arm64 免 Docker 直接运行版本 所需文件夹
      run: mkdir -p ${{ github.workspace }}/ESurfingDialer/

    - name: 下载 ESurfingDialer 的 Arm64 免 Docker 直接运行版本
      uses: actions/download-artifact@v4
      with:
        name: ESurfingDialer 的 Arm64 免 Docker 直接运行版本
        path: ${{ github.workspace }}/ESurfingDialer/

    - name: 修改 ESurfingDialer 的 Arm64 免 Docker 直接运行版本 文件名
      run: |
        mv ${{ github.workspace }}/ESurfingDialer/ESurfingDialer.zip ${{ github.workspace }}/ESurfingDialer/ESurfingDialer-Arm64.zip

    - name: 生成时间菌
      run: |
        sed -i '/\## 这里是时间菌，我来告诉你我是什么时候点的Action/c\## 这里是时间菌，我来告诉你我是什么时候点的Action ☞ ${{ env.TIMESTAMP3 }}' ${{ github.workspace }}/ChangeLogTemplate.md

    - name: 标明Release文件生成时间
      run: |
        sed -i '/\## Release文件生成时间/c\## Release文件生成时间:${{ env.TIMESTAMP2 }}' ${{ github.workspace }}/ChangeLogTemplate.md
        
    # - name: 生成 编译日期 相关更新日志
    #   run: echo -e "# 编译日期：${{ env.TIMESTAMP2 }} \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 生成 最新Jar编译 相关更新日志
    #   run:  |
    #     echo -e "${{ env.LatestJarFilename }}  此文件为Rsplwe大佬的项目  https://github.com/Rsplwe/ESurfingDialer  的最新编译文件。\n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 生成 ESurfingDockerPhone 相关更新日志
    #   run: echo -e "ESurfingDockerPhone 镜像占用手机设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/?tab=readme-ov-file#3%E4%BB%8Egithub-release%E4%B8%8B%E8%BD%BD%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5 \"使用方法\") \n\n离线镜像文件 （能在线拉取就在线拉取吧）\n\n[Amd64镜像文件下载](${{ env.Amd64_Release_Url }} \"Amd64镜像文件下载\")\n[Arm64镜像文件下载](${{ env.Arm64_Release_Url }} \"Arm64镜像文件下载\")\n\n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 生成 ESurfingDockerPc 相关更新日志
    #   run: echo -e "ESurfingDockerPc 镜像占用电脑设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/?tab=readme-ov-file#3%E4%BB%8Egithub-release%E4%B8%8B%E8%BD%BD%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5-1 \"使用方法\") \n\n离线镜像文件 （能在线拉取就在线拉取吧）\n\n[Amd64镜像文件下载](${{ env.Amd64_Release_Url }} \"Amd64镜像文件下载\")\n[Arm64镜像文件下载](${{ env.Arm64_Release_Url }} \"Arm64镜像文件下载\")\n\n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    # - name: 生成 免 Docker 直接运行版本 相关更新日志
    #   run: echo -e "ESurfingDialer.zip 此版本免Docker可运行。占用手机设备上网资格进行网络认证。（Java 不兼容 Arm64 的Windows） ~~[使用方法]~~（还没写） \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 安装 Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: 安装 npm
      run: npm install

    - name: 更新版本号
      id: version
      run: |
        chmod 777 ChangeVersion.sh
        ./ChangeVersion.sh
        echo "VERSION=$(npm view esurfingdialerdocker version)" >> ${{ github.workspace }}/GITHUB_ENV.txt


    - name: 创建 tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a ${{ env.VERSION }} -m "Version ${{ env.VERSION }}"
        git push origin ${{ env.VERSION }}
    
    - name: 创建 Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: ${{ github.workspace }}/ChangeLogTemplate.md
        tag_name: ${{ env.VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          ${{ github.workspace }}/ESurfingDialer/build/libs/*
          ${{ github.workspace }}/ESurfingDialer/PC/ESurfingDockerPc-Amd64.tar.gz
          ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDockerPhone-Amd64.tar.gz
          ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDialer-Amd64.zip
          ${{ github.workspace }}/ESurfingDialer/PC/ESurfingDockerPc-Arm64.tar.gz
          ${{ github.workspace }}/ESurfingDialer/Phone/ESurfingDockerPhone-Arm64.tar.gz
          ${{ github.workspace }}/ESurfingDialer/ESurfingDialer-Arm64.zip
          
        # ${{ github.workspace }}/ESurfingDialer/ESurfingDialer-General.zip
        # ${{ github.workspace }}/ESurfingDockerPhone.tar.gz
        # ${{ github.workspace }}/ESurfingDockerPc.tar.gz
        # ${{ github.workspace }}/ESurfingDialer/ESurfingDialer.zip

    - name: 删除 时间戳和相关环境变量 缓存文件
      uses: geekyeggo/delete-artifact@v5
      with:
        name: TimeStampForGithubEnv

    # - name: 删除 Amd64-Release-Url 等相关环境变量
    #   uses: geekyeggo/delete-artifact@v5
    #   with:
    #     name: Amd64-Release-UrlForGithubEnv

    # - name: 删除 Arm64-Release-Url 环境变量缓存文件
    #   uses: geekyeggo/delete-artifact@v5
    #   with:
    #     name: Arm64-Release-UrlForGithubEnv
