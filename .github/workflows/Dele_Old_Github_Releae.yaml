name: 删除过于陈旧的Release
on:
    workflow_dispatch:
      inputs:
        release_drop:
          description: '是否删除Release'
          required: true
          default: '是'
          type: choice
          options:
            - "是"
            - "否"
        release_keep_count:
          description: '你希望保留多少个Release'
          required: true
          default: '30'
        release_drop_tag:
          description: '是否删除Release的tag标签'
          required: true
          default: '是'
          type: choice
          options:
            - "是"
            - "否"
        pre_release_drop:
          description: '是否删除预发布版本 Pre-release'
          required: true
          default: '是'
          type: choice
          options:
            - "是"
            - "否"
        pre_release_keep_count:
          description: '你希望保留多少个预发布版本 Pre-release'
          required: true
          default: '0'
        pre_release_drop_tag:
          description: '是否删除预发布版本 Pre-release 的tag标签'
          required: true
          default: '是'
          type: choice
          options:
            - "是"
            - "否"
        draft_drop:
          description: '是否删除Release草稿'
          required: true
          default: '是'
          type: choice
          options:
            - "是"
            - "否"
        draft_drop_count:
          description: '你希望保留多少个Release草稿'
          required: true
          default: '0'

jobs:
  Dele_Old_Github_Releae:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: 对用户提交的数据进行处理，使其能够被正确识别
        run: |
          mkdir -p ${{ github.workspace }}
          touch ${{ github.workspace }}/Change_Github_Enviroment.sh
          cat << EOF > ${{ github.workspace }}/Change_Github_Enviroment.sh
          # 检查 release_drop 输入，如果是 "是"，则设置为 true，否则设置为 false
          if [[ ${{ github.event.inputs.release_drop }} == "是" ]] ; then
              echo "release_drop=true" >> $GITHUB_ENV
          else 
              echo "release_drop=false" >> $GITHUB_ENV
          fi

          # 检查 release_keep_count 输入，如果大于等于 0，减 1 并写入环境变量，否则设置为 15
          if [[ ${{ github.event.inputs.release_keep_count }} -ge 0 ]] ; then
              release_keep_count=${{ github.event.inputs.release_keep_count }}-1
              echo "release_keep_count=$release_keep_count" >> $GITHUB_ENV
          else 
              echo "release_keep_count=15" >> $GITHUB_ENV
          fi

          # 检查 release_drop_tag 输入，如果是 "是"，则设置为 true，否则设置为 false
          if [[ ${{ github.event.inputs.release_drop_tag }} == "是" ]] ; then
              echo "release_drop_tag=true" >> $GITHUB_ENV
          else 
              echo "release_drop_tag=false" >> $GITHUB_ENV
          fi

          # 检查 pre_release_drop 输入，如果是 "是"，则设置为 true，否则设置为 false
          if [[ ${{ github.event.inputs.pre_release_drop }} == "是" ]] ; then
              echo "pre_release_drop=true" >> $GITHUB_ENV
          else 
              echo "pre_release_drop=false" >> $GITHUB_ENV
          fi

          # 检查 pre_release_keep_count 输入，如果大于等于 0，减 1 并写入环境变量，否则设置为 -1
          if [[ ${{ github.event.inputs.pre_release_keep_count }} -ge 0 ]] ; then
              pre_release_keep_count=${{ github.event.inputs.pre_release_keep_count }}-1
              echo "pre_release_keep_count=$pre_release_keep_count" >> $GITHUB_ENV
          else 
              echo "pre_release_keep_count=-1" >> $GITHUB_ENV
          fi

          # 检查 pre_release_drop_tag 输入，如果是 "是"，则设置为 true，否则设置为 false
          if [[ ${{ github.event.inputs.pre_release_drop_tag }} == "是" ]] ; then
              echo "pre_release_drop_tag=true" >> $GITHUB_ENV
          else 
              echo "pre_release_drop_tag=false" >> $GITHUB_ENV
          fi

          # 检查 draft_drop 输入，如果是 "是"，则设置为 true，否则设置为 false
          if [[ ${{ github.event.inputs.draft_drop }} == "是" ]] ; then
              echo "draft_drop=true" >> $GITHUB_ENV
          else 
              echo "draft_drop=false" >> $GITHUB_ENV
          fi

          # 检查 draft_drop_count 输入，如果大于等于 0，减 1 并写入环境变量，否则设置为 -1
          if [[ ${{ github.event.inputs.draft_drop_count }} -ge 0 ]] ; then
              draft_drop_count=${{ github.event.inputs.draft_drop_count }}-1
              echo "draft_drop_count=$draft_drop_count" >> $GITHUB_ENV
          else 
              echo "draft_drop_count=-1" >> $GITHUB_ENV
          fi
          EOF
          chmod +x ${{ github.workspace }}/Change_Github_Enviroment.sh
          ${{ github.workspace }}/Change_Github_Enviroment.sh

      - uses: sgpublic/delete-release-action@v1.1
        with:
          #操作仓库
          repo: ${{ github.repository }}
          #是否删除Release
          release-drop: ${{ env.release_drop }}
          #保留Release个数
          release-keep-count: ${{ env.release_keep_count }}
          #是否删除Release的tag标签
          release-drop-tag: ${{ env.release_drop_tag }}
          #是否删除预发布版本 pre-release
          pre-release-drop: ${{ env.pre_release_drop }}
          #保留Pre-Release个数
          pre-release-keep-count: ${{ env.pre_release_keep_count }}
          #是否删除预发布版本 pre-release的tag标签
          pre-release-drop-tag: ${{ env.pre_release_drop_tag }}
          #是否删除Release的草稿
          draft-drop: ${{ env.draft_drop }}
          #保留Release的草稿个数
          draft-drop-count: ${{ env.draft_drop_count }}
        env:
          #认证令牌
          token: ${{ github.token }}